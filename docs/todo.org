
* DONE Can do before game jam starts
** DONE properly initialize SNES
** DONE getting bg/sprite on screen
** DONE make python script to convert Tiled tilemap data into snes backgrounds
** DONE include audio
** DONE game engine
*** DONE movement: jumping, running, idling
*** DONE fall when idling if blocks are taken away
*** DONE player background collisions
*** DONE multiple players
*** DONE use serial controller method for forth player
*** DONE some kind of projectiles to stress test bg collisions, engine in general
*** DONE sprite animations using a simple per-sprite timer
*** DONE sprite collisions
** DONE simple menu framework
** DONE tools to edit map on the SNES itself for quicker development
*** DONE select tile menu
*** DONE with selected tile, draw straight on the map
*** DONE caret in menu mode off by one on x and y axis as that would make
  caret negative. allow for negative offset as we do want to do the right thing
  for first row of x and y
** DONE Make some kind of simple text system
** DONE wall type differentiation in code
** DONE add font, and some way to put it up on the screen
** DONE projectile list implementation to keep track of which projectile next per player
** DONE do some music experiments to learn the sound engine
* do during game jam
** DONE bare minimum
*** DONE 1 or more frames of delay on shooting to lock in diagonals
as it's tricky to press both buttons of a diagonal in the same frame
*** DONE dying from bullet
*** DONE minimal actual game loop
**** DONE shoot people and health bar goes down
**** DONE winner is player who still has health
**** DONE can shoot yourself by bullet wall bounce?
no, not for now. for now we exclude player, as you'd hit yourself so quickly near walls and could be fun shooting right at wall as you go there and bullet rebounds and hits player behind you
*** DONE parrying
**** DONE initial implementation
**** DONE shield sprite goes away when it's done
**** DONE timer isn't counting down, so shield stays until shot w bullet
**** DONE when facing left, the graphic should be inversed
**** DONE when reflecting, bullet can now do damage
**** DONE shield should gbe unusable for a bit after firing
*** DONE draw player spawn boxes
*** DONE bullets should properly manage being active, and if not active
no need to process. This includes doing the right thing for move state
**** DONE when set to inactive, make routine to stop velocity, set offscreen, set move state
*** DONE bullets are on timer
otherwise we:
- have bullets that go on indefinately
- will have no more bullets left if the initial ones fly
- don't have to deal with awkward you don't have any more bullets left
*** DONE code to restart level cleanly
*** DONE menu/pause/game-over screen
**** DONE select from premade maps
**** DONE select player count
**** DONE show wins per player
**** DONE reset
**** DONE edit custom map
*** DONE clean flow between different menus and game
*** DONE temporary invulnerability on game start and after getting hit/touching kill blocks
*** DONE At game start, we start in idle mode.
*** DONE implement concept of match/cap max wins
as now after 9 wins we run into non-letter ascii codes
** hopefully done before end of game jam
*** DONE when going out of bounds and not on some kind of killblock, randomly spawn at one of the 4 spawnboxes
*** DONE adjust movement while jumping/floatiness
We're currently very floaty, and we're not doing anything special, like jumping higher after accelleration. What might be better.

tbh test group seemed to be fine with the floatiness
*** DONE help text on menus
*** DONE add background layer
*** DONE start for pause, instead of select
*** DONE implement different wall types
**** DONE non-deflecting
**** DONE walk-through kill block
**** DONE solid kill block
*** DONE sound effects
**** DONE for shooting
**** DONE getting hit
**** DONE jumping
**** DONE landing
**** DONE dying
**** DONE parrying
***** DONE bullet bounce
***** DONE parry init
**** DONE bullets bouncing off the walls
*** DONE title screen/game start
**** DONE title screen
**** DONE lore
**** DONE controls (?)
*** DONE when you get hit, some form of explosion?
*** DONE match count only goes up to 10 before they roll over to 0. Would be nice if they went up to 100.
*** make music
**** DONE level music
**** DONE menu/non-level music
**** win music
*** make level designs
**** a couple of current levels have dead ends. would be more fun to be able to move to other places. But also sometimes nice to have level be a shootout area.
*** winning animation
*** shield animation
*** dying animation
** bugfixes
*** the first sound effect seems to fire only the first time someone starts a level.
I've hacked around this by having the first sound effect be silent, but that's of course not ideal.
*** DONE bugfix: when you bump into a wall when going right, and you glide down, you can land on killblock and go into idle/running state without triggering killblock ramifications
*** DONE bugfix: when spawning or taking away tiles, when you're less than a block above a solid block, you hover in idle state, and can walk elevatedly above the block
* nice to have
** when people get hit by bullet, do easing off of impact speed
** shooter is pushed back when shooting, by a lot might be fun
** hold shield upwards
** max bullets ricochet
** when reflected, a bullet should change color to red to indicate harm to owner
*** allow for space above level, just like below. is a bit trickier as we would need to offset all y coords, but would make playing field a bit bigger, as you can then jump upwards, instead of immediately hitting the electric fences/warp spots
** alternate control scheme(s)

** more types of blocks
**** warp block
**** person bounce block
**** ice?
**** allow climbing

** coyote time
(aka some leeway in where the edge of a ledge is when jumping off them while runnining)
** level timer (so say 90 secs for a level)
** random map mode
** multiple projectile types
When we then move we move to run state. But we're actually falling, which should be interpreted as jumping state. This might bite us at some point.
** make actual acceptable graphic art
** more sophisticated loop/game loop enhancements
*** as in the core game loop should ideally have some kind of rock paper scissers thing going on. So the goal here is to add some features that make the competition aspect more intricate and combinatorial, so players need to start anticipating on more than one level, aka the meta needs to be strong, and game play needs to get more frentic.
*** allow for deflection of projectiles
*** bombs (so slower/different projectiles)
*** should we be allowed to kick/hit?
*** portals
*** power ups
** implement wall climbing
** implement sliding under things
* saving/sharing (not allowed in game jam)
** script to parse save file and output say Tiled tmj file
** web-based save file exchange
** save custom map
*** figure out saving to sram
*** save file layout/spec
*** select save game
