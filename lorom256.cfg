# ca65 linker config for 128K SMC

# Physical areas of memory
# Names need not match, but it makes it easier to remember if they do.
MEMORY {
    ZEROPAGE:   start =        0, size =  $100;
    BSS:        start =     $100, size = $1E00;
    BSS7E:      start =  $7E2000, size = $E000;
    BSS7F:      start =  $7F0000, size =$10000;

    ROM:        start =  $808000, size = $8000, fill = yes;
    BANK1:      start =  $818000, size = $8000, fill = yes;
    BANK2:      start =  $828000, size = $8000, fill = yes;
    BANK3:      start =  $838000, size = $8000, fill = yes;
    BANK4:      start =  $848000, size = $8000, fill = yes;
    BANK5:      start =  $858000, size = $8000, fill = yes;
    BANK6:      start =  $868000, size = $8000, fill = yes;
    BANK7:      start =  $878000, size = $8000, fill = yes;
}

# Logical areas code/data can be put into.
SEGMENTS {
    ZEROPAGE:   load = ZEROPAGE,    type = zp;
    BSS:        load = BSS,         type = bss, align =  $100;
    BSS7E:      load = BSS7E,       type = bss, align =  $100, optional = yes;
    BSS7F:      load = BSS7F,       type = bss, align =  $100, optional = yes;

    CODE:       load = ROM,         type = ro,  align = $8000;
    RODATA:     load = ROM,         type = ro;
    HEADER:     load = ROM,         start =  $80FFC0;
    ROMINFO:    load = ROM,         start =  $80FFD5,          optional = yes;
    VECTORS:    load = ROM,         start =  $80FFE0;

    # The extra seven banks
    BANK1:      load = BANK1,       align = $8000,             optional = yes;
    BANK2:      load = BANK2,       align = $8000,             optional = yes;
    BANK3:      load = BANK3,       align = $8000,             optional = yes;
    BANK4:      load = BANK4,       align = $8000,             optional = yes;
    BANK5:      load = BANK5,       align = $8000,             optional = yes;
    BANK6:      load = BANK6,       align = $8000,             optional = yes;
    BANK7:      load = BANK7,       align = $8000,             optional = yes;
}
